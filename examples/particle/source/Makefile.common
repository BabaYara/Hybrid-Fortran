#--------------------------------------------------------#
#-- COMMON VARIABLES FOR ALL MAKESFILES -----------------#
#-- created:   2012-5-9 ---------------------------------#
#-- author:    Michel MÃ¼ller ----------------------------#
#-- place:     Tokyo Institute of Technology ------------#
#--------------------------------------------------------#

#--------------------------------------------------------#
#--------  PURE C COMPILER AND LINKER SETTINGS ----------#
#--------  NOTE: This is only active when ---------------#
#--------  OpenACC variables are not set ----------------#
#--------------------------------------------------------#

###### GCC ##############
# C_COMPILER = gcc
# C_COMPILER_FLAGS = -lm -fopenmp -O3
# C_LINKER = gcc
# C_LINKER_FLAGS = ${C_COMPILER_FLAGS}

###### PGCC #############
C_COMPILER = pgcc
C_COMPILER_FLAGS = -Minfo=inline,ipa -Mneginfo -I/usr/local/include -fast -mp
C_LINKER = pgcc
C_LINKER_FLAGS =
ifdef DEBUG
C_COMPILER_FLAGS = -g
C_LINKER_FLAGS = -g
endif
ifdef EMULATED
C_COMPILER_FLAGS = -g
C_LINKER_FLAGS = -g
endif


###### INTEL ############
C_COMPILER_INTEL = icc
C_COMPILER_FLAGS_INTEL = -fast -openmp
C_LINKER_INTEL = icc
C_LINKER_FLAGS_INTEL = -openmp

###### CRAY #############
#C_COMPILER = cc
#C_COMPILER_FLAGS =
#C_LINKER = cc
#C_LINKER_FLAGS = ${C_COMPILER_FLAGS}

#--------------------------------------------------------#
#--------  C+CUDA COMPILER AND LINKER SETTINGS ----------#
#--------------------------------------------------------#
###### TSUBAME 2.0 #######
CUDA_PATH = /opt/cuda/5.5
CUDA_SDK_PATH = /opt/cuda/5.5/samples

##### michel@i-server ####
#CUDA_PATH = /usr/local/cuda
#CUDA_SDK_PATH = ${HOME}/CUDA-SDK-40/C

#### SHARED SETTINGS: NVCC + gcc ###
CUDA_COMPILER = nvcc
CUDA_COMPILER_FLAGS = -O3 -DCTIME -I ${CUDA_PATH}/include -I ${CUDA_SDK_PATH}/common/inc -arch compute_30 -use_fast_math
CUDA_LINKER = ${C_LINKER}
CUDA_LINKER_FLAGS = ${C_LINKER_FLAGS} -L"${CUDA_PATH}/lib64" -lcudart -use_fast_math

#### SHARED SETTINGS: pgCC ###
# CUDA_COMPILER = pgCC
# CUDA_COMPILER_FLAGS = -Mcudax86 -I ${CUDA_SDK_PATH}/common/inc
# CUDA_LINKER = pgCC
# CUDA_LINKER_FLAGS = -Mcudax86 -L"${CUDA_PATH}/lib64" -L"${CUDA_SDK_PATH}/lib"


#--------------------------------------------------------#
#--------  C+OPENACC COMPILER AND LINKER SETTINGS -------#
#--------------------------------------------------------#

###### PGCC #############
OPENACC_COMPILER = pgcc
OPENACC_COMPILER_FLAGS = -c -acc -ta=nvidia,cc3x -fast -DCTIME
OPENACC_LINKER = pgcc
OPENACC_LINKER_FLAGS = -ta=nvidia,cc3x

###### HMPP #############
#HMPP_FLAGS = --codelet-required --nvcc-options -arch,sm_20
#OPENACC_COMPILER = hmpp ${HMPP_FLAGS} ${C_COMPILER}
#OPENACC_COMPILER_FLAGS = ${C_COMPILER_FLAGS} -O4
#OPENACC_LINKER = hmpp ${C_LINKER}
#OPENACC_LINKER_FLAGS = ${C_LINKER_FLAGS}

###### CRAY #############
#OPENACC_COMPILER = cc
#OPENACC_COMPILER_FLAGS =
#OPENACC_LINKER = ${C_LINKER}
#OPENACC_LINKER_FLAGS =

##### SHARED SETTINGS ###
#C_COMPILER = ${OPENACC_COMPILER}
#C_COMPILER_FLAGS = ${OPENACC_COMPILER_FLAGS}
#C_LINKER = ${OPENACC_LINKER}
#C_LINKER_FLAGS = ${C_COMPILER_FLAGS}


#--------------------------------------------------------#
#--------  EXECUTABLES CREATED --------------------------#
#--------------------------------------------------------#
OPENACC_EXE = ${PROGRAM_NAME_PREFIX}_openACC
OPENACC_FORTRAN_EXE = ${PROGRAM_NAME_PREFIX}_openACC_Fortran
CUDA_EXE = ${PROGRAM_NAME_PREFIX}_cuda
C_EXE_INTEL = ${PROGRAM_NAME_PREFIX}_c_version_intel
C_EXE_PGI = ${PROGRAM_NAME_PREFIX}_c_version_pgi
HF_EXE = ${PROGRAM_NAME_PREFIX}_hf_version

#--------------------------------------------------------#
#--------  MAKE HIERARCHY -------------------------------#
#--------------------------------------------------------#
#all: ${C_EXE_INTEL} ${CUDA_EXE} ${OPENACC_EXE} ${HF_EXE} ${OPENACC_FORTRAN_EXE}
all: ${HF_EXE}

${OPENACC_EXE}: etc.o main.o ${PROGRAM_NAME_PREFIX}_openacc.o
	${OPENACC_LINKER} ${OPENACC_LINKER_FLAGS} etc.o ${PROGRAM_NAME_PREFIX}_openacc.o main.o -o ${OPENACC_EXE}

ifdef GPU
${OPENACC_FORTRAN_EXE}: ${PROGRAM_NAME_PREFIX}_openACC_Fortran.o
	pgf90 -acc -Mcuda=7.5,cc3x -ta=nvidia,cc3x -fast ${PROGRAM_NAME_PREFIX}_openACC_Fortran.o ../hybrid_source/time_profiling.o ../hybrid_source/helper_functions.o -o ${OPENACC_FORTRAN_EXE}
else
${OPENACC_FORTRAN_EXE}: ${PROGRAM_NAME_PREFIX}_openACC_Fortran.o
	ifort -fast -openmp ${PROGRAM_NAME_PREFIX}_openACC_Fortran.o ../hybrid_source/time_profiling.o ../hybrid_source/helper_functions.o -o ${OPENACC_FORTRAN_EXE}
endif

${C_EXE_PGI}: etc.o main.o ${PROGRAM_NAME_PREFIX}_c_version.o
	${C_LINKER} ${C_LINKER_FLAGS} etc.o ${PROGRAM_NAME_PREFIX}_c_version.o main.o -o ${C_EXE_PGI}

${C_EXE_INTEL}: etc_intel.o main_intel.o ${PROGRAM_NAME_PREFIX}_c_version_intel.o
	${C_LINKER_INTEL} ${C_LINKER_FLAGS_INTEL} etc_intel.o main_intel.o ${PROGRAM_NAME_PREFIX}_c_version_intel.o -o ${C_EXE_INTEL}

# ${C_EXE_INTEL}: etc_intel.o main_intel.o ${PROGRAM_NAME_PREFIX}_c_version_intel.o
# 	ifort -cxxlib -nofor-main ${C_LINKER_FLAGS_INTEL} etc_intel.o main_intel.o ${PROGRAM_NAME_PREFIX}_c_version_intel.o ../hybrid_source/helper_functions.o -o ${C_EXE_INTEL}

ifdef GPU
${HF_EXE}: ../hybrid_source/${PROGRAM_NAME_PREFIX}.o
	pgf90 -Mcuda=7.5,cc3x -ta=nvidia,cc3x -fast ../hybrid_source/${PROGRAM_NAME_PREFIX}.o ../hybrid_source/time_profiling.o ../hybrid_source/helper_functions.o -o ${HF_EXE}
else
${HF_EXE}: ../hybrid_source/${PROGRAM_NAME_PREFIX}.o
	pgf90 -openmp ../hybrid_source/${PROGRAM_NAME_PREFIX}.o ../hybrid_source/time_profiling.o ../hybrid_source/helper_functions.o -o ${HF_EXE}
endif

${CUDA_EXE}: etc.o main.o ${PROGRAM_NAME_PREFIX}_cuda.o
	${CUDA_LINKER} etc.o ${PROGRAM_NAME_PREFIX}_cuda.o main.o -o ${CUDA_EXE} ${CUDA_LINKER_FLAGS}

etc.o: etc.c ido.h
	${C_COMPILER} ${C_COMPILER_FLAGS} -c ${PROGRAM_COMPILER_FLAGS} etc.c

etc_intel.o: etc.c ido.h
	${C_COMPILER_INTEL} ${C_COMPILER_FLAGS_INTEL} -c ${PROGRAM_COMPILER_FLAGS} etc.c -o etc_intel.o

main.o: main.c ido.h
	${C_COMPILER} ${C_COMPILER_FLAGS} -c ${PROGRAM_COMPILER_FLAGS} main.c -o main.o

main_intel.o: main.c ido.h
	${C_COMPILER_INTEL} ${C_COMPILER_FLAGS_INTEL} -c ${PROGRAM_COMPILER_FLAGS} main.c -o main_intel.o

${PROGRAM_NAME_PREFIX}_openacc.o: ${PROGRAM_NAME_PREFIX}.c ido.h
	${OPENACC_COMPILER} -c ${OPENACC_COMPILER_FLAGS} ${PROGRAM_COMPILER_FLAGS} ${PROGRAM_NAME_PREFIX}.c -o ${PROGRAM_NAME_PREFIX}_openacc.o

ifdef GPU
${PROGRAM_NAME_PREFIX}_openACC_Fortran.o: ${PROGRAM_NAME_PREFIX}_openACC.F90
	pgf90 -acc -Mcuda=7.5,cc3x -ta=nvidia,cc3x -fast -DCTIME -I../hybrid_source -c ${PROGRAM_NAME_PREFIX}_openACC.F90  -o ${PROGRAM_NAME_PREFIX}_openACC_Fortran.o
else
${PROGRAM_NAME_PREFIX}_openACC_Fortran.o: ${PROGRAM_NAME_PREFIX}_openACC.F90
	ifort -openmp -fast -I../hybrid_source -c ${PROGRAM_NAME_PREFIX}_openACC.F90 -o ${PROGRAM_NAME_PREFIX}_openACC_Fortran.o
endif

${PROGRAM_NAME_PREFIX}_c_version.o: ${PROGRAM_NAME_PREFIX}.c ido.h
	${C_COMPILER} -c ${C_COMPILER_FLAGS} ${PROGRAM_COMPILER_FLAGS} ${PROGRAM_NAME_PREFIX}.c -o ${PROGRAM_NAME_PREFIX}_c_version.o

${PROGRAM_NAME_PREFIX}_c_version_intel.o: ${PROGRAM_NAME_PREFIX}.c ido.h
	${C_COMPILER_INTEL} -c ${C_COMPILER_FLAGS_INTEL} ${PROGRAM_COMPILER_FLAGS} ${PROGRAM_NAME_PREFIX}.c -o ${PROGRAM_NAME_PREFIX}_c_version_intel.o

${PROGRAM_NAME_PREFIX}_cuda.o: ${PROGRAM_NAME_PREFIX}.cu ido.h
	${CUDA_COMPILER} -c ${PROGRAM_COMPILER_FLAGS} ${CUDA_COMPILER_FLAGS} ${PROGRAM_NAME_PREFIX}.cu -o ${PROGRAM_NAME_PREFIX}_cuda.o

clean:
	rm -f ${OPENACC_EXE} ${C_EXE} ${CUDA_EXE} *o *gpu *ptx *hmf*

ido.h : commons.h
etc.o : ido.h
etc_intel.o : ido.h
main.o : ido.h
main_intel.o : ido.h
