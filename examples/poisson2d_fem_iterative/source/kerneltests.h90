MODULE kerneltests

use system
use kernels
use omp_lib

implicit none

CONTAINS

  SUBROUTINE testsuite_run(n, m, i_test, ctest, n_loops, times, x1, x2, x3, s)
    real(RP), dimension(n,m), intent(inout) :: x1, x2, x3
    real(RP), dimension(3,3), intent(in) :: s
    real(DP), dimension(n_loops), intent(out) :: times
    integer(4), intent(in) :: n, m, i_test, n_loops
    character(len=40), intent(out) :: ctest
    real(DP) :: t0, t1
    integer(4) :: i
    @domainDependant {attribute(autoDom, transferHere)}
    x1, x2, x3, s
    @end domainDependant

    do i=1,n_loops
      call ztime(t0)
      select case (i_test)

         case (1)
            ctest = '    matrix-vector'
            call matvec(n,m,x1,s,x2,-1.0d0,x3)

         case (2)
            ctest = '    jacobi iteration'
            call jacobi(n,m,x1,x2,x3,s)

      end select
      call ztime(t1)
      times(i) = t1-t0
    end do
  END SUBROUTINE testsuite_run

  !------------------------------------------------------------------------------
  ! kernel test driver
  !------------------------------------------------------------------------------
  SUBROUTINE testsuite(n,n_loops,n_maxthreads)

    integer :: n, n_loops, n_maxthreads

    ! Local variables
    real(RP), allocatable, dimension(:,:) :: x1, x2, x3
    real(RP)  :: s(3,3)
    integer   :: i, i_test, n1, n2, n_threads
    real(DP)  :: times(n_loops), tav, tref
    character(len=40) :: ctest

    s = 2.1d0

    write(0,*)
    write(0,*) '---------------------------------------'
    write(0,*) '           kernel timings'
    write(0,*) '---------------------------------------'

    testrun: do i_test=1,2

    ! matrix-vector
    do n_threads=1,n_maxthreads
       call omp_set_num_threads(n_threads)

       n1 = n*n_threads
       n2 = n
       allocate(x1(n1,n2))
       allocate(x2(n1,n2))
       allocate(x3(n1,n2))
       x1 = 1.2d0
       x2 = 1.3d0
       x3 = 1.4d0

       call testsuite_run(n1, n2, i_test, ctest, n_loops, times, x1, x2, x3, s)

       tav = sum(times(2:n_loops-1))/(n_loops-2)
       if ( n_threads==1 ) then
          tref = tav
       endif
       call output(ctest,n_threads,tav,(n1-2)*(n2-2),n_flops_mv,n_memw_mv,tav/tref)

       deallocate(x3)
       deallocate(x2)
       deallocate(x1)

    end do

    write(0,*) '---------------------------------------'
    end do testrun

  END SUBROUTINE testsuite
  !------------------------------------------------------------------------------


  !------------------------------------------------------------------------------
  ! kernel test driver
  !------------------------------------------------------------------------------
  SUBROUTINE output(ctest,nt,t,n,n_flops,n_memw,xfac)

    real(DP) :: t, bwf, bwm, xfac
    integer  :: n, nt, n_flops, n_memw
    character(len=40) :: ctest
    !------------------------------------------------------------------------------

    bwf  = n_flops*n/t/1.0e9
    bwm  = n_bpw*n_memw*n/t/(1024**3)

    if ( nt==1 ) then
       write(0,'(a)') ctest
       write(0,*) '---------------------------------------'
       write(0,*) 'nt |  CPU time |   Gf/s |   GB/s |   x '
       write(0,*) '---------------------------------------'
    end if

    write(0,'(I3,A,E9.2,A,F6.1,A,F6.1,A,F4.1,A)') &
         nt,' | ',t,' | ',bwf,' | ',bwm,' | ',xfac

  END SUBROUTINE output
  !------------------------------------------------------------------------------


END MODULE kerneltests
